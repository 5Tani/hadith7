{"mappings":"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","sources":["code/data.js"],"sourcesContent":["async function ready() {\r\n  document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', searchBar)\r\n  let params = new URLSearchParams(document.location.search);\r\n  let edition = params.get(\"edition\");\r\n  let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\r\n  let type = params.get(\"type\") || 'section'\r\n  let num = params.get(\"num\");\r\n  let grade = params.get(\"grade\");\r\n\r\n  if (!bareedition || (!num && type != 'full'))\r\n    return\r\n\r\n  let endpoint\r\n  if (type == 'full')\r\n    endpoint = `editions/${edition}`\r\n  else if (type == 'section')\r\n    endpoint = `editions/${edition}/sections/${num}`\r\n  else if (type == 'single')\r\n    endpoint = `editions/${edition}/${num}`\r\n\r\n  let isocodes = await getJSON('isocodes/iso-codes', quranLinks)\r\n  let [editionsJSON, data] = await getJSON(['editions', endpoint])\r\n  let [_, lang, dirval] = editionsJSON[bareedition].collection.filter(e => e.name == edition).map(e => [e.name, e.language, e.direction])[0]\r\n\r\n  let hadiths = data.hadiths\r\n  if (grade) {\r\n    grade = grade.trim().toLowerCase()\r\n    hadiths = hadiths.filter(hadith => hadith.grades.some(e => e.grade.toLowerCase().includes(grade)))\r\n  }\r\n  if(type=='section' && isObject(data?.metadata?.section)){ \r\n   let [numVal,sectionVal] = Object.entries(data.metadata.section).flat()\r\n    document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', `<h2 class=\"text-center\">Section ${numVal}: ${sectionVal}</h2>`)\r\n  }\r\n  hadiths = hadiths.filter(hadith => hadith?.text)\r\n  for (let hadith of hadiths)\r\n    document.querySelector('#mycontainer').appendChild(getHadithCardElem(hadith, edition, dirval, lang, isocodes))\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\r\n\nconst htmlHadithContainer =\r\n  `    \r\n<div class=\"card text-dark bg-light m-3\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n</div>\r\n`\r\n\r\nconst tableContainer =\r\n  `\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nconst searchBar =\r\n  `\r\n<div class=\"mb-3 d-none\">\r\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\r\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n    </svg>\r\n  </button>\r\n</form>\r\n</div>\r\n`\r\n\r\nfunction capitalize(words) {\r\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if (!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  let returnSingle = false\r\n  if (!Array.isArray(endpoints)) {\r\n    endpoints = [endpoints]\r\n    returnSingle = true\r\n  }\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (returnSingle)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString) {\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith, editionName, dirval, lang, isocodes) {\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div', { class: \"card-footer\" })\r\n  if (hadith.grades.length > 0) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<table class=\"table table-sm\">\r\n    <thead>\r\n      <tr>\r\n        <th>Grade</th>\r\n      \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    </tbody>\r\n    </table>`);\r\n  }\r\n\r\n  for (let grade of hadith.grades)\r\n    cardElem.querySelector('tbody').insertAdjacentHTML(\"beforeend\", `<tr><td>${capitalize(grade.grade)}</td><td>${grade.name}</td></tr>`);\r\n  let hrefVal = `hadith:${editionName}:${hadith.hadithnumber}`\r\n  if (hadith.hadithnumber) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\r\n  }\r\n  if (hadith.arabicnumber) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\r\n  }\r\n\r\n  if (hadith.reference) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e => capitalize(e)).join(' ')}</a><br>`);\r\n  }\r\n  cardElem.setAttribute('id', hrefVal)\r\n\r\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\r\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\n  return cardElem\r\n}\r\n\r\nwindow.beginSearch = function () {\r\n  let newparams = new URLSearchParams();\r\n  let searchquery = document.getElementById('searchquery').value\r\n  newparams.set('q', `site:fawazahmed0.github.io/hadiths ${searchquery}`)\r\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\r\n}\r\n\r\nfunction isObject(obj) {\r\n  return obj === Object(obj);\r\n}"],"names":["document","addEventListener","async","ref","querySelector","insertAdjacentHTML","$7fb36df3dd35402c$var$searchBar","endpoint","params","URLSearchParams","location","search","edition","get","bareedition","replace","split","trim","type","num","grade","isocodes","$7fb36df3dd35402c$var$getJSON","$7fb36df3dd35402c$var$quranLinks","editionsJSON","data","_","lang","dirval","collection","filter","e","name","map","language","direction","hadiths","toLowerCase","hadith","grades","some","includes","metadata","section","numVal","sectionVal","Object","entries","flat","text","hadith1","appendChild","$7fb36df3dd35402c$var$getHadithCardElem","$7fb36df3dd35402c$var$capitalize","words","toString","match","toUpperCase","$7fb36df3dd35402c$var$htmlparser","DOMParser","$7fb36df3dd35402c$var$extensions","endpoints","links","returnSingle","Array","isArray","result","Promise","all","obj","response","link","fetch","ok","$7fb36df3dd35402c$var$fetchWithFallback","$7fb36df3dd35402c$var$apiLinks","ext","$7fb36df3dd35402c$var$getURLs","then","json","console","error","editionName","lowerLang","cardElem","htmlString","parseFromString","innerText","footerDiv","elementName","attributesObj","element","createElement","key","value","setAttribute","$7fb36df3dd35402c$var$getElement","class","length","cloneNode"],"version":3,"file":"data.823356bc.js.map"}