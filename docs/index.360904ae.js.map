{"mappings":"AAiCEA,SAASC,iBAAiB,oBAhC1BC,iBACE,IAAIC,uBAkGSC,EAAAC,GAChBC,MAAAC,QAAAH,KAAAA,EAAA,CAEDA,IAEE,IAAAI,QAAiBC,QAAAC,IAAAN,EAAAO,KAAAC,kBAKCP,EAAgBQ,GACnC,IAAAC,EAED,IAAA,IAAAC,KAAAV,EAAA,IAEM,GADNS,QAASE,MAAAD,EAAAF,GACHC,EAAYG,GAAK,OAAAH,EACrB,MAAII,IACJ,OAAAJ,EAZyBK,UAa8BP,EAAAP,UACvDA,EAAGA,GAAae,EACdC,EAAuBV,KAAkBW,GAAEjB,EAAAM,KAAYO,GAAAA,EAAUN,EAAYU,MAE9EC,OAjBwBC,CAAAZ,EAAAP,IAAAoB,MAAAX,GAAAA,EAAAY,kBACsCC,QAAAC,OAAA,OAAQ,GAANpB,EAAMqB,OAAArB,EAAA,GACxEA,EAzGoBsB,CAAQ,YACrBC,EAAQC,EAAW,KAAM,CAAEC,MAAO,eAClCC,EAAQ,EACZ,IAAK,IAAKC,EAAKC,KAAUC,OAAOC,QAAQnC,GAAO,CAC7C+B,IACA,IAAIK,EAAQP,EAAW,KAAM,CAAEC,MAAO,oBAClCO,EAAOR,EAAW,IAAK,CAAES,KAAM,YAAYP,IAAS,iBAAkB,WAAYQ,KAAM,WAC5FF,EAAKG,UAAYP,EAAMQ,KACvBL,EAAMM,YAAYL,GAClB,IAAIM,EAAKd,EAAW,KAAM,CAAEC,MAAO,sBAAuBc,GAAI,WAAWb,MACzE,IAAK,IAAIc,KAASZ,EAAMa,WAAY,CAClC,IAAIC,EAAKlB,EAAW,KAAM,CAAEC,MAAO,oBAC/BkB,EAAY,IAAIC,gBACpBD,EAAUE,IAAI,UAAWL,EAAMJ,MAC/BO,EAAUE,IAAI,cAAelB,GAC7B,IAAImB,EAAQtB,EAAW,IAAK,CAAES,KAAM,iBAAiBU,EAAUI,eAC/DD,EAAMX,UAAYK,EAAMQ,SACxBN,EAAGL,YAAYS,GAEfR,EAAGD,YAAYK,GAEjBX,EAAMM,YAAYC,GAClBf,EAAMc,YAAYN,GAGpBvC,SAASyD,cAAc,gBAAgBZ,YAAYd,MAgD1B,IAAA2B,mBAAE1B,EAAO2B,EAAAC,GAACA,IAAAA,EAAA,IAEvC,IAAAC,EAAA7D,SAAA8D,cAAAH,GACA,IAAA,IAAAxB,EAAAC,KAAAC,OAAkCC,QAAAsB,GAAAC,EAAAE,aAAA5B,EAAAC,GAClC,OAAAyB,QAE0B,yDACxB,+DASFxC,EAAe,CACb,YACA","sources":["code/index.js"],"sourcesContent":["\r\n  async function ready() {\r\n    let data = await getJSON('editions');\r\n    let bigUL = getElement('ul', { class: 'list-group' })\r\n    let count = 0\r\n    for (let [key, value] of Object.entries(data)) {\r\n      count++;\r\n      let bigLI = getElement('li', { class: 'list-group-item' })\r\n      let bigA = getElement('a', { href: `#collapse${count}`, 'data-bs-toggle': 'collapse', role: 'button' })\r\n      bigA.innerText = value.name\r\n      bigLI.appendChild(bigA)\r\n      let ul = getElement('ul', { class: 'list-group collapse', id: `collapse${count}` })\r\n      for (let items of value.collection) {\r\n        let li = getElement('li', { class: 'list-group-item' })\r\n        let newparams = new URLSearchParams();\r\n        newparams.set('edition', items.name)\r\n        newparams.set('bareedition', key)\r\n        let aElem = getElement('a', { href: `sections.html?${newparams.toString()}` })\r\n        aElem.innerText = items.language\r\n        li.appendChild(aElem)\r\n        //items.language , items.link\r\n        ul.appendChild(li)\r\n      }\r\n      bigLI.appendChild(ul)\r\n      bigUL.appendChild(bigLI)\r\n\r\n    }\r\n    document.querySelector('#mycontainer').appendChild(bigUL)\r\n  }\r\n\r\n\r\n\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", ready);\r\n\nlet htmlHadithContainer = \r\n`    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n</div>\r\n`\r\n\r\nlet tableContainer = \r\n`\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nfunction capitalize(words){\r\nreturn words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if(!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  if (!Array.isArray(endpoints))\r\n    endpoints = [endpoints]\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (result.length == 1)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString){\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith,dirval,lang,isocodes){\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div',{class:\"card-footer\"})\r\n  if(hadith.grades.length>0){\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<b>Grades:</b><br>`);\r\n  }\r\n  \r\n  for (let grade of hadith.grades) \r\n    cardElem.querySelector('.card-footer').insertAdjacentHTML(\"beforeend\", `<b>${capitalize(grade.grade)}</b> : ${grade.name}<br>`);\r\n    if(hadith.hadithnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#hadith${hadith.hadithnumber} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\r\n    }\r\n    if(hadith.arabicnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#hadith${hadith.hadithnumber} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\r\n    }\r\n\r\n    if(hadith.reference){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#hadith${hadith.hadithnumber} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e=>capitalize(e)).join(' ')}</a><br>`);\r\n    }\r\n    cardElem.setAttribute('id','hadith'+hadith.hadithnumber)\r\n\r\n    cardElem.querySelector('.card-text').setAttribute('dir',dirval)\r\n    cardElem.querySelector('.card-text').setAttribute('lang',isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\nreturn cardElem\r\n}"],"names":["document","addEventListener","async","data","endpoints","links","Array","isArray","result","Promise","all","map","endpoint","obj","response","link","fetch","ok","e","$ed31e361fc010a5d$var$fetchWithFallback","$ed31e361fc010a5d$var$apiLinks","$ed31e361fc010a5d$var$extensions","ext","flat","$ed31e361fc010a5d$var$getURLs","then","json","console","error","length","$ed31e361fc010a5d$var$getJSON","bigUL","$ed31e361fc010a5d$var$getElement","class","count","key","value","Object","entries","bigLI","bigA","href","role","innerText","name","appendChild","ul","id","items","collection","li","newparams","URLSearchParams","set","aElem","toString","language","querySelector","DOMParser","elementName","attributesObj","element","createElement","setAttribute"],"version":3,"file":"index.360904ae.js.map"}