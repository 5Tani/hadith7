{"mappings":"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","sources":["code/dataseo.js"],"sourcesContent":["\r\nasync function ready() {\r\n  document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', searchBar)\r\n  let params = new URLSearchParams(document.location.search);\r\n  let edition = params.get(\"edition\");\r\n  let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\r\n  let num = params.get(\"num\");\r\n  if (!bareedition || !num)\r\n    return\r\n  let editionsJSON = await getJSON('editions')\r\n\r\n\r\n  let isocodes = await getJSON('isocodes/iso-codes', quranLinks)\r\n  let edtionsLangArr = editionsJSON[bareedition].collection.map(e => [e.name, e.language, e.direction])\r\n  let linksArr = []\r\n  // Table of content\r\n  let tableElem = getElementFromHTML(tableContainer).querySelector('.table')\r\n  let uniqueLangs = [...new Set(edtionsLangArr.map(e => e[1]))]\r\n  for (let lang of uniqueLangs) {\r\n    let aElem = getElement('a', { href: `#${lang.toLowerCase()}` })\r\n    aElem.innerText = lang\r\n    let tr = getElement('tr')\r\n    let td = getElement('td', { class: 'text-center' })\r\n    td.appendChild(aElem)\r\n    tr.appendChild(td)\r\n    tableElem.querySelector('tbody').appendChild(tr)\r\n  }\r\n  // Create endpoints for parallel fetch\r\n  for (let [editionName] of edtionsLangArr)\r\n    linksArr.push(`editions/${editionName}/${num}`)\r\n\r\n  document.querySelector('#mycontainer').appendChild(tableElem)\r\n  let dataArr = await getJSON(linksArr)\r\n  let count = 0\r\n  let langCheck = []\r\n  for (let [editionName, lang, dirval] of edtionsLangArr) {\r\n    let data = dataArr[count]\r\n    // create language heading only if one doesn't exists\r\n    if (!langCheck.includes(lang)) {\r\n      let h2 = getElement('h2', { id: lang.toLowerCase(), 'class': 'text-center' })\r\n      let aElem = getElement('a', { href: `#${lang.toLowerCase()}`, class: \"link-dark\" })\r\n      aElem.innerText = lang\r\n      h2.appendChild(aElem)\r\n      document.querySelector('#mycontainer').appendChild(h2)\r\n    }\r\n    for (let hadith of data.hadiths)\r\n      document.querySelector('#mycontainer').appendChild(getHadithCardElem(hadith, editionName, dirval, lang, isocodes))\r\n\r\n    langCheck.push(lang)\r\n    count++;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\r\n\nconst htmlHadithContainer =\r\n  `    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n</div>\r\n`\r\n\r\nconst tableContainer =\r\n  `\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nconst searchBar =\r\n  `\r\n<div class=\"mb-3 d-none\">\r\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\r\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n    </svg>\r\n  </button>\r\n</form>\r\n</div>\r\n`\r\n\r\nfunction capitalize(words) {\r\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if (!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  let returnSingle = false\r\n  if (!Array.isArray(endpoints)) {\r\n    endpoints = [endpoints]\r\n    returnSingle = true\r\n  }\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (returnSingle)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString) {\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith, editionName, dirval, lang, isocodes) {\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div', { class: \"card-footer\" })\r\n  if (hadith.grades.length > 0) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<table class=\"table table-sm\">\r\n    <thead>\r\n      <tr>\r\n        <th>Grade</th>\r\n      \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    </tbody>\r\n    </table>`);\r\n  }\r\n\r\n  for (let grade of hadith.grades)\r\n    cardElem.querySelector('tbody').insertAdjacentHTML(\"beforeend\", `<tr><td>${capitalize(grade.grade)}</td><td>${grade.name}</td></tr>`);\r\n  let hrefVal = `hadith:${editionName}:${hadith.hadithnumber}`\r\n  if (hadith.hadithnumber) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\r\n  }\r\n  if (hadith.arabicnumber) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\r\n  }\r\n\r\n  if (hadith.reference) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e => capitalize(e)).join(' ')}</a><br>`);\r\n  }\r\n  cardElem.setAttribute('id', hrefVal)\r\n\r\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\r\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\n  return cardElem\r\n}\r\n\r\nwindow.beginSearch = function () {\r\n  let newparams = new URLSearchParams();\r\n  let searchquery = document.getElementById('searchquery').value\r\n  newparams.set('q', `site:fawazahmed0.github.io/hadiths ${searchquery}`)\r\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\r\n}"],"names":["document","addEventListener","async","querySelector","insertAdjacentHTML","$e60f9fcf6541a4dc$var$searchBar","params","URLSearchParams","location","search","edition","get","bareedition","replace","split","trim","num","editionsJSON","$e60f9fcf6541a4dc$var$getJSON","isocodes","$e60f9fcf6541a4dc$var$quranLinks","edtionsLangArr","collection","map","e","name","language","direction","linksArr","tableElem","$e60f9fcf6541a4dc$var$getElementFromHTML","$e60f9fcf6541a4dc$var$tableContainer","uniqueLangs","Set","lang","aElem","$e60f9fcf6541a4dc$var$getElement","href","toLowerCase","innerText","tr","td","class","appendChild","editionName","push","dataArr","count","langCheck","editionName1","lang1","dirval","data","includes","h2","id","hadith","hadiths","$e60f9fcf6541a4dc$var$getHadithCardElem","$e60f9fcf6541a4dc$var$capitalize","words","toString","match","toUpperCase","$e60f9fcf6541a4dc$var$htmlparser","DOMParser","elementName","attributesObj","element","createElement","key","value","Object","entries","setAttribute","$e60f9fcf6541a4dc$var$extensions","endpoints","links","returnSingle","Array","isArray","result","Promise","all","endpoint","obj","response","link","fetch","ok","$e60f9fcf6541a4dc$var$fetchWithFallback","$e60f9fcf6541a4dc$var$apiLinks","ext","flat","$e60f9fcf6541a4dc$var$getURLs","then","json","console","error","htmlString","parseFromString","lowerLang","cardElem","text","footerDiv"],"version":3,"file":"dataseo.7f9ba5f3.js.map"}