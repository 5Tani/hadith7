{"mappings":"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","sources":["code/data.js"],"sourcesContent":["async function ready() {\r\n  let params = new URLSearchParams(document.location.search);\r\n  let edition = params.get(\"edition\");\r\n  let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\r\n  let type = params.get(\"type\") || 'section'\r\n  let num = params.get(\"num\");\r\n  let grade = params.get(\"grade\");\r\n\r\n  if(!bareedition || !num)\r\n    return\r\n\r\n  let endpoint\r\n  if (type == 'full')\r\n  endpoint = `editions/${edition}`\r\n  else if (type = 'section')\r\n  endpoint = `editions/${edition}/sections/${num}`\r\n  else if (type = 'single')\r\n  endpoint = `editions/${edition}/${num}`\r\n\r\n  let isocodes = await getJSON('isocodes/iso-codes', quranLinks)\r\n  let [editionsJSON ,data]= await getJSON(['editions',endpoint])\r\n  let [_, lang, dirval] = editionsJSON[bareedition].collection.filter(e => e.name == edition).map(e => [e.name, e.language, e.direction])[0]\r\n  \r\n  let hadiths = data.hadiths\r\n  if (grade) {\r\n    grade = grade.trim().toLowerCase()\r\n    hadiths = hadiths.filter(hadith => hadith.grades.some(e => e.grade.toLowerCase().includes(grade)))\r\n  }\r\n  hadiths = hadiths.filter(hadith => hadith?.text)\r\n  for (let hadith of hadiths) \r\n    document.querySelector('#mycontainer').appendChild(getHadithCardElem(hadith,dirval,lang,isocodes))\r\n \r\n  \r\n\r\n}\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\r\nwindow.beginSearch = function () {\r\n  let newparams = new URLSearchParams();\r\n  let searchquery = document.getElementById('searchquery').value\r\n  newparams.set('q', `site:fawazahmed0.github.io/hadiths ${searchquery}`)\r\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\r\n}\nlet htmlHadithContainer = \r\n`    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n</div>\r\n`\r\n\r\nlet tableContainer = \r\n`\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nfunction capitalize(words){\r\nreturn words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if(!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/hadith-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/quran-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  if (!Array.isArray(endpoints))\r\n    endpoints = [endpoints]\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (result.length == 1)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString){\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith,dirval,lang,isocodes){\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div',{class:\"card-footer\"})\r\n  if(hadith.grades.length>0){\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<b>Grades:</b><br>`);\r\n  }\r\n  \r\n  for (let grade of hadith.grades) \r\n    cardElem.querySelector('.card-footer').insertAdjacentHTML(\"beforeend\", `<b>${capitalize(grade.grade)}</b> : ${grade.name}<br>`);\r\n    if(hadith.hadithnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#hadith${hadith.hadithnumber} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\r\n    }\r\n    if(hadith.arabicnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#hadith${hadith.hadithnumber} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\r\n    }\r\n\r\n    if(hadith.reference){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#hadith${hadith.hadithnumber} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e=>capitalize(e)).join(' ')}</a><br>`);\r\n    }\r\n    cardElem.setAttribute('id','hadith'+hadith.hadithnumber)\r\n\r\n    cardElem.querySelector('.card-text').setAttribute('dir',dirval)\r\n    cardElem.querySelector('.card-text').setAttribute('lang',isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\nreturn cardElem\r\n}"],"names":["document","addEventListener","async","endpoint","params","URLSearchParams","location","search","edition","get","bareedition","replace","split","trim","type","num","grade","isocodes","$7fb36df3dd35402c$var$getJSON","$7fb36df3dd35402c$var$quranLinks","editionsJSON","data","_","lang","dirval","collection","filter","e","name","map","language","direction","hadiths","toLowerCase","hadith","grades","some","includes","text","hadith1","querySelector","appendChild","$7fb36df3dd35402c$var$getHadithCardElem","window","beginSearch","newparams","searchquery","getElementById","value","set","open","toString","$7fb36df3dd35402c$var$capitalize","words","match","toUpperCase","$7fb36df3dd35402c$var$htmlparser","DOMParser","$7fb36df3dd35402c$var$apiLinks","$7fb36df3dd35402c$var$extensions","endpoints","links","Array","isArray","result","Promise","all","obj","response","link","fetch","ok","$7fb36df3dd35402c$var$fetchWithFallback","ext","flat","$7fb36df3dd35402c$var$getURLs","then","json","console","error","length","lowerLang","cardElem","htmlString","parseFromString","innerText","footerDiv","elementName","attributesObj","element","createElement","key","Object","entries","setAttribute","$7fb36df3dd35402c$var$getElement","class","cloneNode","from","querySelectorAll","at","insertAdjacentHTML","hadithnumber"],"version":3,"file":"data.05e53346.js.map"}