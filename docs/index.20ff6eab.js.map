{"mappings":"AAiCAA,SAASC,iBAAiB,oBAhC1BC,iBACE,IAAIC,uBAkILC,EAAAC,GAED,IAAAC,GAAA,EACSC,MAAAC,QAAAJ,KACHA,EAAY,CACZA,GAEAE,GAAY,OAA2CG,QAAAC,QAAAC,IAAAP,EAAAQ,KAAAC,kBAQbR,EAAYS,GAC1D,IAAIC,MACF,IAAAC,KAASX,EAAA,IAEV,GADCU,QAAWE,MAASD,EAAAF,GACrBC,EAAAG,GAAA,OAAAH,EACD,MAAII,WACFJ,EAdyDK,UAkBrCP,EAAAR,YACpBA,GAASgB,EACTC,EAAoCV,KAACW,GAAAlB,EAAgBO,KAAIO,GAAIA,EAAAN,EAAAU,MAC9DC,OArB0DC,CAAAZ,EAAAR,IAAAqB,MAAAX,GAAAA,EAAAY,kBAEzDC,QAASC,cACTvB,EAAoBG,EAAA,GACrBA,EA7IgBqB,CAAQ,YACrBC,EAAQC,EAAW,KAAM,CAAEC,MAAO,eAClCC,EAAQ,EACZ,IAAK,IAAKC,EAAKC,KAAUC,OAAOC,QAAQnC,GAAO,CAC7C+B,IACA,IAAIK,EAAQP,EAAW,KAAM,CAAEC,MAAO,oBAClCO,EAAOR,EAAW,IAAK,CAAES,KAAM,YAAYP,IAAS,iBAAkB,WAAYQ,KAAM,WAC5FF,EAAKG,UAAYP,EAAMQ,KACvBL,EAAMM,YAAYL,GAClB,IAAIM,EAAKd,EAAW,KAAM,CAAEC,MAAO,sBAAuBc,GAAI,WAAWb,MACzE,IAAK,IAAIc,KAASZ,EAAMa,WAAY,CAClC,IAAIC,EAAKlB,EAAW,KAAM,CAAEC,MAAO,oBAC/BkB,EAAY,IAAIC,gBACpBD,EAAUE,IAAI,UAAWL,EAAMJ,MAC/BO,EAAUE,IAAI,cAAelB,GAC7B,IAAImB,EAAQtB,EAAW,IAAK,CAAES,KAAM,iBAAiBU,EAAUI,eAC/DD,EAAMX,UAAYK,EAAMQ,SACxBN,EAAGL,YAAYS,GAEfR,EAAGD,YAAYK,GAEjBX,EAAMM,YAAYC,GAClBf,EAAMc,YAAYN,GAGpBvC,SAASyD,cAAc,gBAAgBZ,YAAYd,MA8E7B,IAAA2B,mBAClB1B,EACc2B,EAAAC,GAClBA,IAAaA,EAAA,IACd,IAAAC,EAAA7D,SAAA8D,cAAAH,GAGD,IAAA,IAAAxB,EAAeC,KAAAC,OAAAC,QAAAsB,GAAkBC,EAAYE,aAAA5B,EAAAC,GAC3C,OAAIyB,QAG6B,wHAWjCvC,EAAO,aAAwD","sources":["code/index.js"],"sourcesContent":["\r\nasync function ready() {\r\n  let data = await getJSON('editions');\r\n  let bigUL = getElement('ul', { class: 'list-group' })\r\n  let count = 0\r\n  for (let [key, value] of Object.entries(data)) {\r\n    count++;\r\n    let bigLI = getElement('li', { class: 'list-group-item' })\r\n    let bigA = getElement('a', { href: `#collapse${count}`, 'data-bs-toggle': 'collapse', role: 'button' })\r\n    bigA.innerText = value.name\r\n    bigLI.appendChild(bigA)\r\n    let ul = getElement('ul', { class: 'list-group collapse', id: `collapse${count}` })\r\n    for (let items of value.collection) {\r\n      let li = getElement('li', { class: 'list-group-item' })\r\n      let newparams = new URLSearchParams();\r\n      newparams.set('edition', items.name)\r\n      newparams.set('bareedition', key)\r\n      let aElem = getElement('a', { href: `sections.html?${newparams.toString()}` })\r\n      aElem.innerText = items.language\r\n      li.appendChild(aElem)\r\n      //items.language , items.link\r\n      ul.appendChild(li)\r\n    }\r\n    bigLI.appendChild(ul)\r\n    bigUL.appendChild(bigLI)\r\n\r\n  }\r\n  document.querySelector('#mycontainer').appendChild(bigUL)\r\n}\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\r\n\nconst htmlHadithContainer =\r\n  `    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n</div>\r\n`\r\n\r\nconst tableContainer =\r\n  `\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nconst searchBar =\r\n  `\r\n<div class=\"mb-3 d-none\">\r\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\r\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\r\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\r\n      <path fill-rule=\"evenodd\"\r\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\r\n    </svg>\r\n  </button>\r\n</form>\r\n</div>\r\n`\r\n\r\nfunction capitalize(words) {\r\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if (!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  let returnSingle = false\r\n  if (!Array.isArray(endpoints)) {\r\n    endpoints = [endpoints]\r\n    returnSingle = true\r\n  }\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (returnSingle)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString) {\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith, editionName, dirval, lang, isocodes) {\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div', { class: \"card-footer\" })\r\n  if (hadith.grades.length > 0) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<b>Grades:</b><br>`);\r\n  }\r\n\r\n  for (let grade of hadith.grades)\r\n    cardElem.querySelector('.card-footer').insertAdjacentHTML(\"beforeend\", `<b>${capitalize(grade.grade)}</b> : ${grade.name}<br>`);\r\n  let hrefVal = `hadith:${editionName}:${hadith.hadithnumber}`\r\n  if (hadith.hadithnumber) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\r\n  }\r\n  if (hadith.arabicnumber) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\r\n  }\r\n\r\n  if (hadith.reference) {\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e => capitalize(e)).join(' ')}</a><br>`);\r\n  }\r\n  cardElem.setAttribute('id', hrefVal)\r\n\r\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\r\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\n  return cardElem\r\n}\r\n\r\nwindow.beginSearch = function () {\r\n  let newparams = new URLSearchParams();\r\n  let searchquery = document.getElementById('searchquery').value\r\n  newparams.set('q', `site:fawazahmed0.github.io/hadiths ${searchquery}`)\r\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\r\n}"],"names":["document","addEventListener","async","data","endpoints","links","returnSingle","Array","isArray","result","Promise","all","map","endpoint","obj","response","link","fetch","ok","e","$ed31e361fc010a5d$var$fetchWithFallback","$ed31e361fc010a5d$var$apiLinks","$ed31e361fc010a5d$var$extensions","ext","flat","$ed31e361fc010a5d$var$getURLs","then","json","console","error","$ed31e361fc010a5d$var$getJSON","bigUL","$ed31e361fc010a5d$var$getElement","class","count","key","value","Object","entries","bigLI","bigA","href","role","innerText","name","appendChild","ul","id","items","collection","li","newparams","URLSearchParams","set","aElem","toString","language","querySelector","DOMParser","elementName","attributesObj","element","createElement","setAttribute"],"version":3,"file":"index.20ff6eab.js.map"}