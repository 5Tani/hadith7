{"mappings":"AAgCAA,SAASC,iBAAiB,oBAhC1BC,iBACE,IAAIC,EAAS,IAAIC,gBAAgBJ,SAASK,SAASC,QAC/CC,EAAUJ,EAAOK,IAAI,WACrBC,EAAcN,EAAOK,IAAI,gBAAkBD,EAAQG,QAAO,OAAS,IAAIC,MAAM,KAAK,GAAGC,OACzF,IAAKH,EACH,OACF,IAAII,uBA8FLC,EAAAC,GAEDC,MAAAC,QAAAH,KAAAA,EAAA,CACAA,IAEE,IAAAI,QAAOC,QAAAC,IAAAN,EAAWO,KAAIC,kBAKvBP,EAAAQ,GAED,IAAAC,EACA,IAAS,IAAAC,KAAAV,EAAA,IAEH,GADAS,QAAiBE,MAAAD,EAAWF,GAC5BC,EAAWG,GAAA,OAAAH,EACf,MAASI,IACT,OAAIJ,EAZ+BK,UAaTP,EAAAP,YACxBA,GAASe,EACXC,EAAoCV,KAACW,GAAAjB,EAAgBM,KAAIO,GAAIA,EAAAN,EAAAU,MAG7DC,OAlB8DC,CAAAZ,EAAAP,IAAAoB,MAAAX,GAAAA,EAAAY,YAAGC,MAAMC,QAAAC,OACxE,OAAA,GAAArB,EAAAsB,OAAAtB,EAAA,GAEQA,EAtGUuB,CAAQ,QAErBC,EAAKC,EAAW,KAAM,CAAEC,MAAO,eACnC,IAAK,IAAKC,EAAKC,KAAUC,OAAOC,QAAQnC,EAAKJ,GAAuB,SAAY,UAAI,CAClF,IAAIwC,EAAKN,EAAW,KAAM,CAAEC,MAAO,oBAC/BM,EAAY,IAAI9C,gBACpB8C,EAAUC,IAAI,UAAW5C,GACzB2C,EAAUC,IAAI,OAAQ,WACtBD,EAAUC,IAAI,MAAON,GACrB,IAAIO,EAAQT,EAAW,IAAK,CAAEU,KAAM,aAAaH,EAAUI,eAC3DF,EAAMG,UAAY,WAAWV,OAASC,IACtCG,EAAGO,YAAYJ,GACfV,EAAGc,YAAYP,GAEjB,IAAIA,EAAKN,EAAW,KAAM,CAAEC,MAAO,oBAC/BQ,EAAQT,EAAW,IAAK,CAAEU,KAAM,aACpCD,EAAMG,UAAY,4CAClBN,EAAGO,YAAYJ,GACfV,EAAGc,YAAYP,GACfjD,SAASyD,cAAc,gBAAgBD,YAAYd,MAiDpC,IAAAgB,mBAACf,EAAWgB,EAAAC,GAAEA,IAAOA,EAAA,IAAC,IAAAC,EAAA7D,SAAA8D,cAAAH,GAEvC,IAAA,IAAAd,EAAAC,KAAAC,OAAAC,QAAAY,GAAAC,EAAAE,aAAAlB,EAAAC,GACA,OAAAe,MAEE/B,EACE,6GACF,+DAUAC,EAAa,CACb","sources":["code/sections.js"],"sourcesContent":["async function ready() {\r\n  let params = new URLSearchParams(document.location.search);\r\n  let edition = params.get(\"edition\");\r\n  let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\r\n  if (!bareedition)\r\n    return\r\n  let data = await getJSON('info')\r\n\r\n  let UL = getElement('ul', { class: 'list-group' })\r\n  for (let [key, value] of Object.entries(data[bareedition]['metadata']['sections'])) {\r\n    let LI = getElement('li', { class: 'list-group-item' })\r\n    let newparams = new URLSearchParams();\r\n    newparams.set('edition', edition)\r\n    newparams.set('type', 'section')\r\n    newparams.set('num', key)\r\n    let aElem = getElement('a', { href: `data.html?${newparams.toString()}` })\r\n    aElem.innerText = `Section ${key} : ${value}`\r\n    LI.appendChild(aElem)\r\n    UL.appendChild(LI)\r\n  }\r\n  let LI = getElement('li', { class: 'list-group-item' })\r\n  let aElem = getElement('a', { href: `seo.html` })\r\n  aElem.innerText = `Get Single Hadith with Multiple Languages`\r\n  LI.appendChild(aElem)\r\n  UL.appendChild(LI)\r\n  document.querySelector('#mycontainer').appendChild(UL)\r\n}\r\n\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\nlet htmlHadithContainer = \r\n`    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n<a href=\"\" class=\"stretched-link\"></a>\r\n</div>\r\n`\r\n\r\nlet tableContainer = \r\n`\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nfunction capitalize(words){\r\nreturn words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if(!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/hadith-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/quran-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  if (!Array.isArray(endpoints))\r\n    endpoints = [endpoints]\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (result.length == 1)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString){\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith,dirval,lang,isocodes){\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div',{class:\"card-footer\"})\r\n  if(hadith.grades.length>0){\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<b>Grades:</b><br>`);\r\n  }\r\n  \r\n  for (let grade of hadith.grades) \r\n    cardElem.querySelector('.card-footer').insertAdjacentHTML(\"beforeend\", `<b>${capitalize(grade.grade)}</b> : ${grade.name}<br>`);\r\n    if(hadith.hadithnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Hadith Number: ${hadith.hadithnumber}<br>`);\r\n    }\r\n    if(hadith.arabicnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Arabic Number: ${hadith.arabicnumber}<br>`);\r\n    }\r\n\r\n    if(hadith.reference){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Reference: ${Object.entries(hadith.reference).flat().map(e=>capitalize(e)).join(' ')}<br>`);\r\n    }\r\n    cardElem.setAttribute('id','hadith'+hadith.hadithnumber)\r\n    cardElem.querySelector('a').setAttribute('href','#hadith'+hadith.hadithnumber)\r\n\r\n    cardElem.querySelector('.card-text').setAttribute('dir',dirval)\r\n    cardElem.querySelector('.card-text').setAttribute('lang',isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\nreturn cardElem\r\n}"],"names":["document","addEventListener","async","params","URLSearchParams","location","search","edition","get","bareedition","replace","split","trim","data","endpoints","links","Array","isArray","result","Promise","all","map","endpoint","obj","response","link","fetch","ok","e","$430349b638d34726$var$fetchWithFallback","$430349b638d34726$var$apiLinks","$430349b638d34726$var$extensions","ext","flat","$430349b638d34726$var$getURLs","then","json","catch","console","error","length","$430349b638d34726$var$getJSON","UL","$430349b638d34726$var$getElement","class","key","value","Object","entries","LI","newparams","set","aElem","href","toString","innerText","appendChild","querySelector","DOMParser","elementName","attributesObj","element","createElement","setAttribute"],"version":3,"file":"sections.922b9651.js.map"}