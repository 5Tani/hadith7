{"mappings":"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","sources":["code/dataseo.js"],"sourcesContent":["\nasync function ready() {\n  document.querySelector('#mycontainer').insertAdjacentHTML('beforeend', searchBar)\n  let params = new URLSearchParams(document.location.search);\n  let edition = params.get(\"edition\");\n  let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\n  let num = params.get(\"num\");\n  if (!bareedition || !num)\n    return\n\n  showSpinningWheel('#mycontainer','beforeend')\n  let editionsJSON = await getJSON('editions')\n\n\n  let isocodes = await getJSON('isocodes/iso-codes', quranLinks)\n  let edtionsLangArr = editionsJSON[bareedition].collection.map(e => [e.name, e.language, e.direction]).sort((a, b) => a[1].localeCompare(b[1]))\n  let linksArr = []\n  // Table of content\n  let tableElem = getElementFromHTML(tableContainer).querySelector('.table')\n  let uniqueLangs = [...new Set(edtionsLangArr.map(e => e[1]))].sort()\n  for (let lang of uniqueLangs) {\n    let aElem = getElement('a', { href: `#${lang.toLowerCase()}` })\n    aElem.innerText = lang\n    let tr = getElement('tr')\n    let td = getElement('td', { class: 'text-center' })\n    td.appendChild(aElem)\n    tr.appendChild(td)\n    tableElem.querySelector('tbody').appendChild(tr)\n  }\n  // Create endpoints for parallel fetch\n  for (let [editionName] of edtionsLangArr)\n    linksArr.push(`editions/${editionName}/${num}`)\n\n  document.querySelector('#mycontainer').appendChild(tableElem)\n  let dataArr = await getJSON(linksArr)\n  let count = 0\n  let langCheck = []\n  for (let [editionName, lang, dirval] of edtionsLangArr) {\n    let data = dataArr[count]\n    // create language heading only if one doesn't exists\n    if (!langCheck.includes(lang)) {\n      let h2 = getElement('h2', { id: lang.toLowerCase(), 'class': 'text-center' })\n      let aElem = getElement('a', { href: `#${lang.toLowerCase()}`, class: \"link-dark\" })\n      aElem.innerText = lang\n      h2.appendChild(aElem)\n      document.querySelector('#mycontainer').appendChild(h2)\n    }\n    for (let hadith of data.hadiths)\n      document.querySelector('#mycontainer').appendChild(getHadithCardElem(hadith, editionName, dirval, lang, isocodes))\n\n    langCheck.push(lang)\n    count++;\n  }\n\nremoveSpinningWheel()\n\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", ready);\n\nconst htmlHadithContainer =\n  `    \n<div class=\"card text-dark bg-light m-3\">\n<div class=\"card-body\">\n<div class=\"card-text lead m-1\"></div>\n</div>\n\n<span id=\"footercontainer\">\n</span>\n\n</div>\n`\n\nconst tableContainer =\n  `\n<table class=\"table table-hover  table-striped\">\n  <tbody>\n\n  </tbody>\n</table>\n`\n\nconst searchBar =\n  `\n<div class=\"mb-3 d-none\">\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n    </svg>\n  </button>\n</form>\n</div>\n`\n\nfunction capitalize(words) {\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\n}\n\nlet htmlparser = new DOMParser();\n\nfunction getElement(elementName, attributesObj) {\n  if (!attributesObj)\n    attributesObj = {}\n  let element = document.createElement(elementName);\n  for (let [key, value] of Object.entries(attributesObj)) {\n    element.setAttribute(key, value);\n  }\n  return element\n}\n\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\nlet extensions = [\".min.json\", \".json\"]\n\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\n// Get links async i.e in parallel\nasync function getJSON(endpoints, links) {\n  let returnSingle = false\n  if (!Array.isArray(endpoints)) {\n    endpoints = [endpoints]\n    returnSingle = true\n  }\n  let result = await Promise.all(\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\n  ).catch(console.error)\n  if (returnSingle)\n    return result[0]\n  return result\n}\n\n\nasync function fetchWithFallback(links, obj) {\n  let response;\n  for (let link of links) {\n    try {\n      response = await fetch(link, obj)\n      if (response.ok)\n        return response\n    } catch (e) { }\n  }\n  return response\n}\n\n// convert endpoint into multiple urls, including fallback urls\nfunction getURLs(endpoint, links) {\n  links = links || apiLinks\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\n}\n\nfunction getElementFromHTML(htmlString) {\n  return htmlparser.parseFromString(htmlString, \"text/html\");\n}\n\n// pass hadith object & get card element with all hadith info in it\nfunction getHadithCardElem(hadith, editionName, dirval, lang, isocodes) {\n  let lowerLang = lang.toLowerCase()\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\n  cardElem.querySelector('.card-text').innerText = hadith.text\n  let footerDiv = getElement('div', { class: \"card-footer\" })\n  if (hadith.grades.length > 0) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<table class=\"table table-sm\">\n    <thead>\n      <tr>\n        <th>Grade</th>\n      \n      </tr>\n    </thead>\n    <tbody>\n    </tbody>\n    </table>`);\n  }\n\n  for (let grade of hadith.grades)\n    cardElem.querySelector('tbody').insertAdjacentHTML(\"beforeend\", `<tr><td>${capitalize(grade.grade)}</td><td>${grade.name}</td></tr>`);\n  let hrefVal = `hadith:${editionName}:${hadith.hadithnumber}`\n  if (\"hadithnumber\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\n  }\n  if (\"arabicnumber\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\n  }\n\n  if (\"reference\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e => capitalize(e)).join(' ')}</a><br>`);\n  }\n  cardElem.setAttribute('id', hrefVal)\n\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\n\n  return cardElem\n}\n\nwindow.beginSearch = function () {\n  let newparams = new URLSearchParams();\n  let searchquery = document.getElementById('searchquery').value\n  newparams.set('q', `site:fawazahmed0.github.io/hadiths ${searchquery}`)\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\n}\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n// Show as loading spinning wheel,only if there isn't any other\nfunction showSpinningWheel(selector, position) {\n  if (!document.body.contains(document.querySelector('#spinningwheel')) ) {\n    document.querySelector(selector).insertAdjacentHTML(position,`<div  id=\"spinningwheel\">\n    <div class=\"text-center\">\n      <div class=\"spinner-border m-5\" role=\"status\">\n      </div>\n      </div>\n      </div>\n      `)\n  }\n}\n\nfunction removeSpinningWheel() {\n  if (document.body.contains(document.querySelector('#spinningwheel')) )\n  document.querySelector('#spinningwheel').remove()\n}"],"names":["document","addEventListener","async","querySelector","insertAdjacentHTML","$e60f9fcf6541a4dc$var$searchBar","params","URLSearchParams","location","search","edition","get","bareedition","replace","split","trim","num","selector","position","body","contains","editionsJSON","$e60f9fcf6541a4dc$var$getJSON","isocodes","$e60f9fcf6541a4dc$var$quranLinks","edtionsLangArr","collection","map","e","name","language","direction","sort","a","b","localeCompare","linksArr","tableElem","$e60f9fcf6541a4dc$var$getElementFromHTML","$e60f9fcf6541a4dc$var$tableContainer","uniqueLangs","Set","lang","aElem","$e60f9fcf6541a4dc$var$getElement","href","toLowerCase","innerText","tr","td","class","appendChild","editionName","push","dataArr","count","langCheck","editionName1","lang1","dirval","data","includes","h2","id","hadith","hadiths","$e60f9fcf6541a4dc$var$getHadithCardElem","remove","$e60f9fcf6541a4dc$var$capitalize","words","toString","match","toUpperCase","$e60f9fcf6541a4dc$var$htmlparser","DOMParser","elementName","attributesObj","element","createElement","key","value","Object","entries","setAttribute","$e60f9fcf6541a4dc$var$apiLinks","$e60f9fcf6541a4dc$var$extensions","endpoints","links","returnSingle","Array","isArray","result","Promise","all","endpoint","obj","response","link","fetch","ok","$e60f9fcf6541a4dc$var$fetchWithFallback","ext","flat","$e60f9fcf6541a4dc$var$getURLs","then","json","catch","console","error","htmlString","parseFromString","lowerLang","cardElem","text","footerDiv","grades","length","cloneNode","from","querySelectorAll","at","grade","hrefVal","hadithnumber","arabicnumber","reference","join","iso1","iso2","window","beginSearch","newparams","searchquery","getElementById","set","open"],"version":3,"file":"dataseo.05c57e48.js.map"}