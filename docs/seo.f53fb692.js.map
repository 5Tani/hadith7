{"mappings":"AAoBAA,SAASC,iBAAiB,oBApB1BC,iBAgLA,IAA2BC,EAAUC,EAAVD,EA/KP,eA+KiBC,EA/KF,YAgL5BJ,SAASK,KAAKC,SAASN,SAASO,cAAc,oBACjDP,SAASO,cAAcJ,GAAUK,mBAAmBJ,EAAS,oKAhL/D,IAAIK,QAiFNP,eAAuBQ,EAAWC,GAChC,IAAIC,GAAe,EACdC,MAAMC,QAAQJ,KACjBA,EAAY,CAACA,GACbE,GAAe,GAEjB,IAAIG,QAAeC,QAAQC,IACzBP,EAAUQ,KAAIC,GAQlBjB,eAAiCS,EAAOS,GACtC,IAAIC,EACJ,IAAK,IAAIC,KAAQX,EACf,IAEE,GADAU,QAAiBE,MAAMD,EAAMF,GACzBC,EAASG,GACX,OAAOH,EACT,MAAOI,IAEX,OAAOJ,EAjBqBK,CAqB9B,SAAiBP,EAAUR,GAEzB,OADAA,EAAQA,GAASgB,EACVC,EAAWV,KAAIW,GAAOlB,EAAMO,KAAIO,GAAKA,EAAIN,EAAWU,MAAMC,OAvBnBC,CAAQZ,EAAUR,IAAQqB,MAAKX,GAAYA,EAASY,YAChGC,MAAMC,QAAQC,OAChB,OAAIxB,EACKG,EAAO,GACTA,EA5FUsB,CAAQ,YAErBC,EAAKC,EAAW,KAAM,CAAEC,MAAO,eACnC,IAAK,IAAKC,EAAKC,KAAUC,OAAOC,QAAQnC,GAAO,CAC7C,IAAIoC,EAAKN,EAAW,KAAM,CAAEC,MAAO,oBAC/BM,EAAY,IAAIC,gBACpBD,EAAUE,IAAI,cAAeP,GAC7B,IAAIQ,EAAQV,EAAW,IAAK,CAAEW,KAAM,eAAeJ,EAAUK,eAC7DF,EAAMG,UAAYV,EAAMW,KACxBR,EAAGS,YAAYL,GACfX,EAAGgB,YAAYT,GAiLb7C,SAASK,KAAKC,SAASN,SAASO,cAAc,oBAClDP,SAASO,cAAc,kBAAkBgD,SA/KzCvD,SAASO,cAAc,gBAAgB+C,YAAYhB,MAkDpC,IAAIkB,UAErB,SAASjB,EAAWkB,EAAaC,GAC1BA,IACHA,EAAgB,IAClB,IAAIC,EAAU3D,SAAS4D,cAAcH,GACrC,IAAK,IAAKhB,EAAKC,KAAUC,OAAOC,QAAQc,GACtCC,EAAQE,aAAapB,EAAKC,GAE5B,OAAOiB,EAGT,IAAIhC,EAAW,CAAC,wDAAyD,+DAErEC,EAAa,CAAC,YAAa,SAqF/BkC,OAAOC,YAAc,WACnB,IAAIjB,EAAY,IAAIC,gBAChBiB,EAAchE,SAASiE,eAAe,eAAevB,MACzDI,EAAUE,IAAI,IAAK,sCAAsCgB,KACzDF,OAAOI,KAAK,iCAAmCpB,EAAUK,WAAY","sources":["code/seo.js"],"sourcesContent":["async function ready() {\n  showSpinningWheel('#mycontainer','beforeend')\n  let data = await getJSON('editions');\n\n  let UL = getElement('ul', { class: 'list-group' })\n  for (let [key, value] of Object.entries(data)) {\n    let LI = getElement('li', { class: 'list-group-item' })\n    let newparams = new URLSearchParams();\n    newparams.set('bareedition', key)\n    let aElem = getElement('a', { href: `single.html?${newparams.toString()}` })\n    aElem.innerText = value.name\n    LI.appendChild(aElem)\n    UL.appendChild(LI)\n  }\n  removeSpinningWheel()\n  document.querySelector('#mycontainer').appendChild(UL)\n}\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ready);\nconst htmlHadithContainer =\n  `    \n<div class=\"card text-dark bg-light m-3\">\n<div class=\"card-body\">\n<div class=\"card-text lead m-1\"></div>\n</div>\n\n<span id=\"footercontainer\">\n</span>\n\n</div>\n`\n\nconst tableContainer =\n  `\n<table class=\"table table-hover  table-striped\">\n  <tbody>\n\n  </tbody>\n</table>\n`\n\nconst searchBar =\n  `\n<div class=\"mb-3 d-none\">\n<form class=\"d-flex\" onsubmit=\"beginSearch(); return false\">\n  <input id=\"searchquery\" class=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n  <button id=\"searchbtn\" class=\"btn btn-outline-info\" type=\"button\" onclick=\"beginSearch(); return false\">\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-search\" fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill-rule=\"evenodd\"\n        d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n      <path fill-rule=\"evenodd\"\n        d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n    </svg>\n  </button>\n</form>\n</div>\n`\n\nfunction capitalize(words) {\n  return words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\n}\n\nlet htmlparser = new DOMParser();\n\nfunction getElement(elementName, attributesObj) {\n  if (!attributesObj)\n    attributesObj = {}\n  let element = document.createElement(elementName);\n  for (let [key, value] of Object.entries(attributesObj)) {\n    element.setAttribute(key, value);\n  }\n  return element\n}\n\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\nlet extensions = [\".min.json\", \".json\"]\n\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\n// Get links async i.e in parallel\nasync function getJSON(endpoints, links) {\n  let returnSingle = false\n  if (!Array.isArray(endpoints)) {\n    endpoints = [endpoints]\n    returnSingle = true\n  }\n  let result = await Promise.all(\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\n  ).catch(console.error)\n  if (returnSingle)\n    return result[0]\n  return result\n}\n\n\nasync function fetchWithFallback(links, obj) {\n  let response;\n  for (let link of links) {\n    try {\n      response = await fetch(link, obj)\n      if (response.ok)\n        return response\n    } catch (e) { }\n  }\n  return response\n}\n\n// convert endpoint into multiple urls, including fallback urls\nfunction getURLs(endpoint, links) {\n  links = links || apiLinks\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\n}\n\nfunction getElementFromHTML(htmlString) {\n  return htmlparser.parseFromString(htmlString, \"text/html\");\n}\n\n// pass hadith object & get card element with all hadith info in it\nfunction getHadithCardElem(hadith, editionName, dirval, lang, isocodes) {\n  let lowerLang = lang.toLowerCase()\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\n  cardElem.querySelector('.card-text').innerText = hadith.text\n  let footerDiv = getElement('div', { class: \"card-footer\" })\n  if (hadith.grades.length > 0) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<table class=\"table table-sm\">\n    <thead>\n      <tr>\n        <th>Grade</th>\n      \n      </tr>\n    </thead>\n    <tbody>\n    </tbody>\n    </table>`);\n  }\n\n  for (let grade of hadith.grades)\n    cardElem.querySelector('tbody').insertAdjacentHTML(\"beforeend\", `<tr><td>${capitalize(grade.grade)}</td><td>${grade.name}</td></tr>`);\n  let hrefVal = `hadith:${editionName}:${hadith.hadithnumber}`\n  if (\"hadithnumber\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Hadith Number: ${hadith.hadithnumber}</a><br>`);\n  }\n  if (\"arabicnumber\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Arabic Number: ${hadith.arabicnumber}</a><br>`);\n  }\n\n  if (\"reference\" in hadith) {\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<a href=#${hrefVal} class=\"link-dark text-decoration-none\" >Reference: ${Object.entries(hadith.reference).flat().map(e => capitalize(e)).join(' ')}</a><br>`);\n  }\n  cardElem.setAttribute('id', hrefVal)\n\n  cardElem.querySelector('.card-text').setAttribute('dir', dirval)\n  cardElem.querySelector('.card-text').setAttribute('lang', isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\n\n  return cardElem\n}\n\nwindow.beginSearch = function () {\n  let newparams = new URLSearchParams();\n  let searchquery = document.getElementById('searchquery').value\n  newparams.set('q', `site:fawazahmed0.github.io/hadiths ${searchquery}`)\n  window.open('https://www.google.com/search?' + newparams.toString(), '_blank');\n}\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n// Show as loading spinning wheel,only if there isn't any other\nfunction showSpinningWheel(selector, position) {\n  if (!document.body.contains(document.querySelector('#spinningwheel')) ) {\n    document.querySelector(selector).insertAdjacentHTML(position,`<div  id=\"spinningwheel\">\n    <div class=\"text-center\">\n      <div class=\"spinner-border m-5\" role=\"status\">\n      </div>\n      </div>\n      </div>\n      `)\n  }\n}\n\nfunction removeSpinningWheel() {\n  if (document.body.contains(document.querySelector('#spinningwheel')) )\n  document.querySelector('#spinningwheel').remove()\n}"],"names":["document","addEventListener","async","selector","position","body","contains","querySelector","insertAdjacentHTML","data","endpoints","links","returnSingle","Array","isArray","result","Promise","all","map","endpoint","obj","response","link","fetch","ok","e","$ec472072328b6849$var$fetchWithFallback","$ec472072328b6849$var$apiLinks","$ec472072328b6849$var$extensions","ext","flat","$ec472072328b6849$var$getURLs","then","json","catch","console","error","$ec472072328b6849$var$getJSON","UL","$ec472072328b6849$var$getElement","class","key","value","Object","entries","LI","newparams","URLSearchParams","set","aElem","href","toString","innerText","name","appendChild","remove","DOMParser","elementName","attributesObj","element","createElement","setAttribute","window","beginSearch","searchquery","getElementById","open"],"version":3,"file":"seo.f53fb692.js.map"}