{"mappings":"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","sources":["code/sections.js"],"sourcesContent":["async function ready() {\r\n  let params = new URLSearchParams(document.location.search);\r\n  let edition = params.get(\"edition\");\r\n  let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\r\n  if (!bareedition)\r\n    return\r\n  let data = await getJSON('info')\r\n\r\n  let UL = getElement('ul', { class: 'list-group' })\r\n  for (let [key, value] of Object.entries(data[bareedition]['metadata']['sections'])) {\r\n    let LI = getElement('li', { class: 'list-group-item' })\r\n    let newparams = new URLSearchParams();\r\n    newparams.set('edition', edition)\r\n    newparams.set('type', 'section')\r\n    newparams.set('num', key)\r\n    let aElem = getElement('a', { href: `data.html?${newparams.toString()}` })\r\n    aElem.innerText = `Section ${key} : ${value}`\r\n    LI.appendChild(aElem)\r\n    UL.appendChild(LI)\r\n  }\r\n  let LI = getElement('li', { class: 'list-group-item' })\r\n  let aElem = getElement('a', { href: `seo.html` })\r\n  aElem.innerText = `Get Single Hadith with Multiple Languages`\r\n  LI.appendChild(aElem)\r\n  UL.appendChild(LI)\r\n  document.querySelector('#mycontainer').appendChild(UL)\r\n}\r\n\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", ready);\nlet htmlHadithContainer = \r\n`    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n<a href=\"\" class=\"stretched-link\"></a>\r\n</div>\r\n`\r\n\r\nlet tableContainer = \r\n`\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nfunction capitalize(words){\r\nreturn words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if(!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/hadith-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/quran-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  if (!Array.isArray(endpoints))\r\n    endpoints = [endpoints]\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (result.length == 1)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString){\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith,dirval,lang,isocodes){\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div',{class:\"card-footer\"})\r\n  if(hadith.grades.length>0){\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<b>Grades:</b><br>`);\r\n  }\r\n  \r\n  for (let grade of hadith.grades) \r\n    cardElem.querySelector('.card-footer').insertAdjacentHTML(\"beforeend\", `<b>${capitalize(grade.grade)}</b> : ${grade.name}<br>`);\r\n    if(hadith.hadithnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Hadith Number: ${hadith.hadithnumber}<br>`);\r\n    }\r\n    if(hadith.arabicnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Arabic Number: ${hadith.arabicnumber}<br>`);\r\n    }\r\n\r\n    if(hadith.reference){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Reference: ${Object.entries(hadith.reference).flat().map(e=>capitalize(e)).join(' ')}<br>`);\r\n    }\r\n    cardElem.setAttribute('id','hadith'+hadith.hadithnumber)\r\n    cardElem.querySelector('a').setAttribute('href','#hadith'+hadith.hadithnumber)\r\n\r\n    cardElem.querySelector('.card-text').setAttribute('dir',dirval)\r\n    cardElem.querySelector('.card-text').setAttribute('lang',isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\nreturn cardElem\r\n}"],"names":["$kAkBg","parcelRequire","_ready","asyncToGenerator","$parcel$interopDefault","$jO2Au","mark","_callee","params","edition","bareedition","data","UL","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","key","value","LI","newparams","aElem","LI1","aElem1","URLSearchParams","document","location","search","get","replace","split","trim","$0395ef23857d5acb$var$getJSON","_ctx","sent","$0395ef23857d5acb$var$getElement","class","undefined","Object","entries","Symbol","iterator","next","done","set","href","concat","toString","innerText","appendChild","t0","return","querySelector","apply","this","arguments","addEventListener","DOMParser","elementName","attributesObj","element","createElement","slicedToArray","setAttribute","err","$0395ef23857d5acb$var$apiLinks","$0395ef23857d5acb$var$extensions","endpoints","links","_getJSON","result","Array","isArray","Promise","all","map","endpoint","$0395ef23857d5acb$var$fetchWithFallback","$0395ef23857d5acb$var$getURLs","then","response","json","catch","console","error","length","obj","_fetchWithFallback","link","fetch","ok","t1","ext","e","flat"],"version":3,"file":"sections.746c8b4b.js.map"}