{"mappings":"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","sources":["code/dataseo.js"],"sourcesContent":["\r\n  async function ready() {\r\n    let params = new URLSearchParams(document.location.search);\r\n    let edition = params.get(\"edition\");\r\n    let bareedition = params.get(\"bareedition\") || edition.replace(/\\d+/g, '').split('-')[1].trim()\r\n    let num = params.get(\"num\");\r\n    if (!bareedition || !num)\r\n      return\r\n    let editionsJSON = await getJSON('editions')\r\n\r\n\r\n    let isocodes = await getJSON('isocodes/iso-codes', quranLinks)\r\n    let edtionsLangArr = editionsJSON[bareedition].collection.map(e => [e.name, e.language, e.direction])\r\n    let linksArr = []\r\n    // Table of content\r\n    let tableElem = getElementFromHTML(tableContainer).querySelector('.table')\r\n    for (let [editionName, lang] of edtionsLangArr) {\r\n      let aElem = getElement('a', { href: `#${lang.toLowerCase()}` })\r\n      aElem.innerText = lang\r\n      let tr = getElement('tr')\r\n      let td = getElement('td',{class:'text-center'})\r\n      td.appendChild(aElem)\r\n      tr.appendChild(td)\r\n      tableElem.querySelector('tbody').appendChild(tr)\r\n      // Create endpoints for parallel fetch\r\n      linksArr.push(`editions/${editionName}/${num}`)\r\n    }\r\n    document.querySelector('#mycontainer').appendChild(tableElem)\r\n    let dataArr = await getJSON(linksArr)\r\n    let count = 0\r\n    for (let [editionName, lang, dirval] of edtionsLangArr) {\r\n      let data = dataArr[count]\r\n      let h2 = getElement('h2', { id: lang.toLowerCase(),'class':'text-center' })\r\n      let aElem = getElement('a',{href:`#${lang.toLowerCase()}`})\r\n      aElem.innerText = lang\r\n      h2.appendChild(aElem)\r\n      document.querySelector('#mycontainer').appendChild(h2)\r\n      for (let hadith of data.hadiths) \r\n      document.querySelector('#mycontainer').appendChild(getHadithCardElem(hadith,dirval,lang,isocodes))\r\n      \r\n      count++;\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", ready);\r\n\nlet htmlHadithContainer = \r\n`    \r\n<div class=\"card text-dark bg-light m-5\">\r\n<div class=\"card-body\">\r\n<div class=\"card-text lead m-1\"></div>\r\n</div>\r\n\r\n<span id=\"footercontainer\">\r\n</span>\r\n\r\n<a href=\"\" class=\"stretched-link\"></a>\r\n</div>\r\n`\r\n\r\nlet tableContainer = \r\n`\r\n<table class=\"table table-hover  table-striped\">\r\n  <tbody>\r\n\r\n  </tbody>\r\n</table>\r\n`\r\n\r\nfunction capitalize(words){\r\nreturn words.toString().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, match => match.toUpperCase()).trim()\r\n}\r\n\r\nlet htmlparser = new DOMParser();\r\n\r\nfunction getElement(elementName, attributesObj) {\r\n  if(!attributesObj)\r\n    attributesObj = {}\r\n  let element = document.createElement(elementName);\r\n  for (let [key, value] of Object.entries(attributesObj)) {\r\n    element.setAttribute(key, value);\r\n  }\r\n  return element\r\n}\r\n\r\nlet apiLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/hadith-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/hadith-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/hadith-api/1/\"]\r\nlet quranLinks = [\"https://cdn.jsdelivr.net/gh/fawazahmed0/quran-api@1/\", \"https://gitcdn.link/cdn/fawazahmed0/quran-api/1/\", \"https://raw.githubusercontent.com/fawazahmed0/quran-api/1/\"]\r\nlet extensions = [\".min.json\", \".json\"]\r\n\r\n// https://www.shawntabrizi.com/code/programmatically-fetch-multiple-apis-parallel-using-async-await-javascript/\r\n// Get links async i.e in parallel\r\nasync function getJSON(endpoints, links) {\r\n  if (!Array.isArray(endpoints))\r\n    endpoints = [endpoints]\r\n  let result = await Promise.all(\r\n    endpoints.map(endpoint => fetchWithFallback(getURLs(endpoint, links)).then(response => response.json()))\r\n  ).catch(console.error)\r\n  if (result.length == 1)\r\n    return result[0]\r\n  return result\r\n}\r\n\r\n\r\nasync function fetchWithFallback(links, obj) {\r\n  let response;\r\n  for (let link of links) {\r\n    try {\r\n      response = await fetch(link, obj)\r\n      if (response.ok)\r\n        return response\r\n    } catch (e) { }\r\n  }\r\n  return response\r\n}\r\n\r\n// convert endpoint into multiple urls, including fallback urls\r\nfunction getURLs(endpoint, links) {\r\n  links = links || apiLinks\r\n  return extensions.map(ext => links.map(e => e + endpoint + ext)).flat()\r\n}\r\n\r\nfunction getElementFromHTML(htmlString){\r\n  return htmlparser.parseFromString(htmlString, \"text/html\");\r\n}\r\n\r\n// pass hadith object & get card element with all hadith info in it\r\nfunction getHadithCardElem(hadith,dirval,lang,isocodes){\r\n  let lowerLang = lang.toLowerCase()\r\n  let cardElem = getElementFromHTML(htmlHadithContainer).querySelector('.card')\r\n  cardElem.querySelector('.card-text').innerText = hadith.text\r\n  let footerDiv = getElement('div',{class:\"card-footer\"})\r\n  if(hadith.grades.length>0){\r\n    cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n  Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `<b>Grades:</b><br>`);\r\n  }\r\n  \r\n  for (let grade of hadith.grades) \r\n    cardElem.querySelector('.card-footer').insertAdjacentHTML(\"beforeend\", `<b>${capitalize(grade.grade)}</b> : ${grade.name}<br>`);\r\n    if(hadith.hadithnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Hadith Number: ${hadith.hadithnumber}<br>`);\r\n    }\r\n    if(hadith.arabicnumber){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Arabic Number: ${hadith.arabicnumber}<br>`);\r\n    }\r\n\r\n    if(hadith.reference){\r\n      cardElem.querySelector('#footercontainer').appendChild(footerDiv.cloneNode())\r\n    Array.from(cardElem.querySelectorAll('.card-footer')).at(-1).insertAdjacentHTML(\"beforeend\", `Reference: ${Object.entries(hadith.reference).flat().map(e=>capitalize(e)).join(' ')}<br>`);\r\n    }\r\n    cardElem.setAttribute('id','hadith'+hadith.hadithnumber)\r\n    cardElem.querySelector('a').setAttribute('href','#hadith'+hadith.hadithnumber)\r\n\r\n    cardElem.querySelector('.card-text').setAttribute('dir',dirval)\r\n    cardElem.querySelector('.card-text').setAttribute('lang',isocodes[lowerLang].iso1 ? isocodes[lowerLang].iso1 : isocodes[lowerLang].iso2)\r\n\r\nreturn cardElem\r\n}"],"names":["document","addEventListener","async","params","URLSearchParams","location","search","edition","get","bareedition","replace","split","trim","num","editionsJSON","$e60f9fcf6541a4dc$var$getJSON","isocodes","$e60f9fcf6541a4dc$var$quranLinks","edtionsLangArr","collection","map","e","name","language","direction","linksArr","tableElem","$e60f9fcf6541a4dc$var$getElementFromHTML","$e60f9fcf6541a4dc$var$tableContainer","querySelector","editionName","lang","aElem","$e60f9fcf6541a4dc$var$getElement","href","toLowerCase","innerText","tr","td","class","appendChild","push","dataArr","count","editionName1","lang1","dirval","data","h2","id","hadith","hadiths","$e60f9fcf6541a4dc$var$getHadithCardElem","$e60f9fcf6541a4dc$var$capitalize","words","toString","match","toUpperCase","$e60f9fcf6541a4dc$var$htmlparser","DOMParser","elementName","attributesObj","element","createElement","key","value","Object","entries","setAttribute","$e60f9fcf6541a4dc$var$apiLinks","$e60f9fcf6541a4dc$var$extensions","endpoints","links","Array","isArray","result","Promise","all","endpoint","obj","response","link","fetch","ok","$e60f9fcf6541a4dc$var$fetchWithFallback","ext","flat","$e60f9fcf6541a4dc$var$getURLs","then","json","catch","console","error","length","htmlString","parseFromString","lowerLang","cardElem","text","footerDiv","grades","cloneNode","from","querySelectorAll","at","insertAdjacentHTML","grade","hadithnumber"],"version":3,"file":"dataseo.c650295b.js.map"}